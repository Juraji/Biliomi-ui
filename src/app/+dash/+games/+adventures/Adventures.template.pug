p Check out your viewer's latest adventures and change adventure settings

.columns
  .col.span-8-of-12
    data-table(tableId="adventures", [dataSource]="adventureRecordsDataSource", [exportConfig]="exportConfig", [filterMapping]="filterMapping")
      ng-container(columnDef="Username")
        header-cell(*headerCellDef="", sortProperty="Adventurer.Username") Username
        data-cell(*dataCellDef="let record")
          user-display([user]="record.Adventurer")

      ng-container(columnDef="Bet")
        header-cell(*headerCellDef="", sortProperty="Bet") Bet
        data-cell(*dataCellDef="let record")
          | {{record.Bet | points | async}}

      ng-container(columnDef="Payout")
        header-cell(*headerCellDef="", sortProperty="Payout") Payout
        data-cell(*dataCellDef="let record")
          | {{record.Payout | points | async}}

      ng-container(columnDef="ByTamagotchi")
        header-cell(*headerCellDef="", sortProperty="ByTamagotchi") By Tamagotchi
        data-cell(*dataCellDef="let record")
          mat-icon(*ngIf="record.ByTamagotchi", color="primary") done

      ng-container(columnDef="Date")
        header-cell(*headerCellDef="", sortProperty="Date", [sortDefault]="'DESC'") Date
        data-cell(*dataCellDef="let record") {{record.Date | date}}

  .col.span-4-of-12
    form(#adventuresSettingsForm="", (submit)="saveSettings()")
      mat-card
        mat-card-header
          mat-card-title Adventure Settings
          mat-card-subtitle &nbsp;

        mat-card-content
          mat-form-field
            input#adventure-cooldown(matInput, type="number", name="adventure-cooldown",
            placeholder="Adventure Cooldown", required="true", [formControl]="cooldownControl")
            mat-hint The cooldown in between adventures, in milliseconds
            mat-error(*ngIf="cooldownControl.hasError('required')") This field is required!
            mat-error(*ngIf="cooldownControl.hasError('min')") Please enter a valid amount (above 0).

          mat-form-field
            input#adventure-join-timout(matInput, type="number", name="adventure-join-timout",
            placeholder="Join Timeout", required="true", [formControl]="joinTimeoutControl")
            mat-hint The time for other players to join the adventure after initialization, in milliseconds
            mat-error(*ngIf="joinTimeoutControl.hasError('required')") This field is required!
            mat-error(*ngIf="joinTimeoutControl.hasError('min')") Please enter a valid amount (above 0).

          mat-form-field
            input#adventure-minimum-bet(matInput, type="number", name="adventure-minimum-bet",
            placeholder="Minimum Bet", required="true", [formControl]="minimumBetControl")
            mat-hint The minimum bet in order to join an adventure
            mat-error(*ngIf="minimumBetControl.hasError('required')") This field is required!
            mat-error(*ngIf="minimumBetControl.hasError('min')") Please enter a valid amount (above 0).

          mat-form-field
            input#adventure-maximum-bet(matInput, type="number", name="adventure-maximum-bet",
            placeholder="Maximum Bet", required="true", [formControl]="maximumBetControl")
            mat-hint The maximum bet in order to join an adventure
            mat-error(*ngIf="maximumBetControl.hasError('required')") This field is required!
            mat-error(*ngIf="maximumBetControl.hasError('min')") Please enter a valid amount (above 0).

          mat-form-field
            input#adventure-win-multiplier(matInput, type="number", name="adventure-win-multiplier",
            placeholder="Win payout multiplier", required="true", [formControl]="winMultiplierControl")
            mat-hint The amount against which the bet gets miltiplied and returned to the user,
              | with the betted amount, when a user survives.
            mat-error(*ngIf="winMultiplierControl.hasError('required')") This field is required!
            mat-error(*ngIf="winMultiplierControl.hasError('min')") Please enter a valid amount (above 0).

        mat-card-actions
          save-button([disabled]="!isSettingsFormOk", [stateEmitter]="_adventureSettingsClient.afterSave")
          button(mat-button, type="button", (click)="initFields()", matTooltip="Refresh data")
            mat-icon refresh
