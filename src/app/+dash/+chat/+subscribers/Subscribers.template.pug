p Check out the latest subscribers and change the behaviour of Biliomi when new subscribers are registered.

.columns
  .col.span-8-of-12
    .mat-button-row.pull-right
      button.pull-right(mat-mini-fab, color="primary", (click)="exportLatestSubscribers()", title="Export to Excel")
        mat-icon cloud_download
      button(mat-mini-fab, color="primary", (click)="loadLatestSubscribers()", title="Refresh")
        mat-icon refresh

    p Latest Subscribers

    mat-table(*ngIf="latestSubscribersDataSource.data != undefined", #table="", [dataSource]="latestSubscribersDataSource")
      ng-container(matColumnDef="DisplayName")
        mat-header-cell(*matHeaderCellDef="") Username
        mat-cell(*matCellDef="let user")
          user-display([user]="user")

      ng-container(matColumnDef="SubscribeDate")
        mat-header-cell(*matHeaderCellDef="") Follows Since
        mat-cell(*matCellDef="let user")
          | {{user.SubscribeDate | date}}

      mat-header-row(*matHeaderRowDef="['DisplayName', 'SubscribeDate']")
      mat-row(*matRowDef="let row; columns: ['DisplayName', 'SubscribeDate'];")

  .col.span-4-of-12
    p &nbsp;

    form(#subscriberWatchSettingsForm="", (submit)="saveSettings()")
      mat-card
        mat-card-header
          mat-card-title Subscriber Watch Settings
          mat-card-subtitle &nbsp;

        mat-card-content
          mat-form-field
            input#subscriber-watch-settings-tier1-payout(matInput, type="number", name="subscriber-watch-settings-tier1-payout",
            placeholder="Tier 1 Reward", required="true", [formControl]="subscriberRewardTier1Control")
            mat-hint The amount of points to payout to tier 1/prime subscribers.
            mat-error(*ngIf="subscriberRewardTier1Control.hasError('required')") This field is required!
            mat-error(*ngIf="subscriberRewardTier1Control.hasError('min')") Please enter a valid amount (min 0).

          mat-form-field
            input#subscriber-watch-settings-tier2-payout(matInput, type="number", name="subscriber-watch-settings-tier2-payout",
            placeholder="Tier 2 Reward", required="true", [formControl]="subscriberRewardTier2Control")
            mat-hint The amount of points to payout to tier 2 subscribers.
            mat-error(*ngIf="subscriberRewardTier2Control.hasError('required')") This field is required!
            mat-error(*ngIf="subscriberRewardTier2Control.hasError('min')") Please enter a valid amount (min 0).

          mat-form-field
            input#subscriber-watch-settings-tier3-payout(matInput, type="number", name="subscriber-watch-settings-tier3-payout",
            placeholder="Tier 3 Reward", required="true", [formControl]="subscriberRewardTier3Control")
            mat-hint The amount of points to payout to tier 3 subscribers.
            mat-error(*ngIf="subscriberRewardTier3Control.hasError('required')") This field is required!
            mat-error(*ngIf="subscriberRewardTier3Control.hasError('min')") Please enter a valid amount (min 0).

          .mat-button-row.mat-button-row-blocks
            edit-template-button(templateKey="SubscriberSubNotice") Edit New Subscriber Notice
            edit-template-button(templateKey="SubscriberResubNotice") Edit Resubscribe Notice

        mat-card-actions
          button(mat-raised-button, color="primary", [disabled]="!isSettingsFormOk", title="Save")
            mat-icon done
          button(mat-button, type="button", (click)="initSettingsFields()", title="Refresh data")
            mat-icon refresh
